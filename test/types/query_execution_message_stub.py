# coding: utf-8
"""Waylay Query: timeseries queries (v1 protocol) model tests.

This code was generated from the OpenAPI documentation of 'Waylay Query: timeseries queries (v1 protocol)'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.queries.models.query_execution_message import (
        QueryExecutionMessage,
    )

    QueryExecutionMessageAdapter = TypeAdapter(QueryExecutionMessage)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

query_execution_message_model_schema = json.loads(
    r"""{
  "required" : [ "action", "category", "level", "message", "timestamp" ],
  "type" : "object",
  "properties" : {
    "message" : {
      "title" : "Message",
      "type" : "string",
      "description" : "A human readable message."
    },
    "level" : {
      "$ref" : "#/components/schemas/QueryExecutionMessage_level"
    },
    "timestamp" : {
      "title" : "Timestamp",
      "type" : "string",
      "format" : "date-time"
    },
    "action" : {
      "title" : "Action",
      "type" : "string",
      "description" : "The request action that caused this message."
    },
    "category" : {
      "title" : "Message Category",
      "type" : "string",
      "description" : "The subsystem that issued this message.",
      "example" : "data"
    },
    "properties" : {
      "$ref" : "#/components/schemas/Message_Arguments"
    },
    "exception" : {
      "$ref" : "#/components/schemas/CauseException"
    }
  },
  "additionalProperties" : true,
  "description" : "A message object that informs or warns about a query execution issue."
}
""",
    object_hook=with_example_provider,
)
query_execution_message_model_schema.update({"definitions": MODEL_DEFINITIONS})

query_execution_message_faker = JSF(
    query_execution_message_model_schema, allow_none_optionals=1
)


class QueryExecutionMessageStub:
    """QueryExecutionMessage unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return query_execution_message_faker.generate(
            use_defaults=True, use_examples=True
        )

    @classmethod
    def create_instance(cls) -> "QueryExecutionMessage":
        """Create QueryExecutionMessage stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if not json:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                QueryExecutionMessageAdapter.json_schema(), allow_none_optionals=1
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return QueryExecutionMessageAdapter.validate_python(
            json, context={"skip_validation": True}
        )
