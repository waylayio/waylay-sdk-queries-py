# coding: utf-8
"""Waylay Query: timeseries queries (v1 protocol) model tests.

This code was generated from the OpenAPI documentation of 'Waylay Query: timeseries queries (v1 protocol)'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.queries.models.render_mode_one_of4 import RenderModeOneOf4

    RenderModeOneOf4Adapter = TypeAdapter(RenderModeOneOf4)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

render_mode_one_of_4_model_schema = json.loads(
    r"""{
  "title" : "_RenderMode_oneOf_4",
  "type" : "string",
  "description" : "Renders row index in `rows`, and each series as a values array.\n\nThe series are prefixed by their series attributes.The `rows` index is prefixed by the labels for these attributes.\n\n###### options\n- `iso_timestamp`: `True`\n- `header_array`: `column`\n- `roll_up`: `False`\n- `data_axis`: `row`",
  "enum" : [ "HEADER_COLUMN" ]
}
""",
    object_hook=with_example_provider,
)
render_mode_one_of_4_model_schema.update({"definitions": MODEL_DEFINITIONS})

render_mode_one_of_4_faker = JSF(
    render_mode_one_of_4_model_schema, allow_none_optionals=1
)


class RenderModeOneOf4Stub:
    """RenderModeOneOf4 unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return render_mode_one_of_4_faker.generate(use_defaults=True, use_examples=True)

    @classmethod
    def create_instance(cls) -> "RenderModeOneOf4":
        """Create RenderModeOneOf4 stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if json is None:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                RenderModeOneOf4Adapter.json_schema(), allow_none_optionals=1
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return RenderModeOneOf4Adapter.validate_python(
            json, context={"skip_validation": True}
        )
