# coding: utf-8
"""Waylay Query: timeseries queries (v1 protocol) model tests.

This code was generated from the OpenAPI documentation of 'Waylay Query: timeseries queries (v1 protocol)'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.queries.models.query_hal_links import QueryHALLinks

    QueryHALLinksAdapter = TypeAdapter(QueryHALLinks)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

query_hal_links_model_schema = json.loads(
    r"""{
  "required" : [ "execute", "self" ],
  "type" : "object",
  "properties" : {
    "self" : {
      "$ref" : "#/components/schemas/HALLink"
    },
    "execute" : {
      "$ref" : "#/components/schemas/HALLink"
    }
  },
  "additionalProperties" : true,
  "description" : "HAL Links for a query entity."
}
""",
    object_hook=with_example_provider,
)
query_hal_links_model_schema.update({"definitions": MODEL_DEFINITIONS})

query_hal_links_faker = JSF(query_hal_links_model_schema, allow_none_optionals=1)


class QueryHALLinksStub:
    """QueryHALLinks unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return query_hal_links_faker.generate(use_defaults=True, use_examples=True)

    @classmethod
    def create_instance(cls) -> "QueryHALLinks":
        """Create QueryHALLinks stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if not json:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                QueryHALLinksAdapter.json_schema(), allow_none_optionals=1
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return QueryHALLinksAdapter.validate_python(
            json, context={"skip_validation": True}
        )
