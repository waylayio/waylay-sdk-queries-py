# coding: utf-8
"""Waylay Query: timeseries queries (v1 protocol) model tests.

This code was generated from the OpenAPI documentation of 'Waylay Query: timeseries queries (v1 protocol)'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.queries.models.queries_list_response import QueriesListResponse

    QueriesListResponseAdapter = TypeAdapter(QueriesListResponse)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

queries_list_response_model_schema = json.loads(
    r"""{
  "required" : [ "_links", "count", "limit", "offset", "queries" ],
  "type" : "object",
  "properties" : {
    "messages" : {
      "title" : "Messages",
      "type" : "array",
      "items" : {
        "$ref" : "#/components/schemas/Message"
      }
    },
    "queries" : {
      "title" : "Query item list",
      "type" : "array",
      "description" : "One page of matching query definitions.",
      "items" : {
        "$ref" : "#/components/schemas/QueryListItem"
      }
    },
    "count" : {
      "title" : "Current page size",
      "type" : "integer",
      "description" : "Number of query definitions returned in the current response."
    },
    "offset" : {
      "title" : "Page offset",
      "type" : "integer",
      "description" : "Offset in the full listing (skipped definitions)."
    },
    "limit" : {
      "title" : "Page size limit",
      "type" : "integer",
      "description" : "Maximal number of query definitions returned in one response."
    },
    "total_count" : {
      "title" : "Total count",
      "type" : "integer",
      "description" : "Total number of query definitions matching the filter."
    },
    "_links" : {
      "$ref" : "#/components/schemas/QueryListHALLinks"
    }
  },
  "additionalProperties" : true,
  "description" : "Listing of named queries, with paging links."
}
""",
    object_hook=with_example_provider,
)
queries_list_response_model_schema.update({"definitions": MODEL_DEFINITIONS})

queries_list_response_faker = JSF(
    queries_list_response_model_schema, allow_none_optionals=1
)


class QueriesListResponseStub:
    """QueriesListResponse unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return queries_list_response_faker.generate(
            use_defaults=True, use_examples=True
        )

    @classmethod
    def create_instance(cls) -> "QueriesListResponse":
        """Create QueriesListResponse stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if json is None:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                QueriesListResponseAdapter.json_schema(), allow_none_optionals=1
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return QueriesListResponseAdapter.validate_python(
            json, context={"skip_validation": True}
        )
